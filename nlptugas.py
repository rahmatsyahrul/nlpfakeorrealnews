# -*- coding: utf-8 -*-
"""nlptugas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cJTn-Os6iUU5hf2BkRMmi4vVm8L5ZFNr
"""

import pandas as pd
df = pd.read_csv('/content/drive/My Drive/Colab/sample_data/fake_or_real_news.csv')
df = df.drop(columns='title')
df = df.drop(columns='Unnamed: 0')

df.head()

category = pd.get_dummies(df.label)
df_baru = pd.concat([df, category], axis=1)
df_baru = df_baru.drop(columns='label')
df_baru

news = df_baru['text'].values
label = df_baru[['FAKE', 'REAL']].values

from sklearn.model_selection import train_test_split

news_latih, news_test, label_latih, label_test = train_test_split(news, label, test_size=0.2)

from tensorflow.keras.preprocessing.text import Tokenizer
from tensorflow.keras.preprocessing.sequence import pad_sequences
 
tokenizer = Tokenizer(num_words=3174, oov_token='x')
tokenizer.fit_on_texts(news_latih) 
tokenizer.fit_on_texts(news_test)
 
sekuens_latih = tokenizer.texts_to_sequences(news_latih)
sekuens_test = tokenizer.texts_to_sequences(news_test)
 
padded_latih = pad_sequences(sekuens_latih) 
padded_test = pad_sequences(sekuens_test)

import tensorflow as tf
model = tf.keras.Sequential([
    tf.keras.layers.Embedding(input_dim=3174, output_dim=16),
    tf.keras.layers.LSTM(64),
    tf.keras.layers.Dense(64, activation='relu'),
    tf.keras.layers.Dropout(0.2),
    tf.keras.layers.Dense(32, activation='relu'),
    tf.keras.layers.Dropout(0.5),
    tf.keras.layers.Dense(2, activation='softmax')
])

model.compile(loss='categorical_crossentropy',
              optimizer=tf.optimizers.Adam(),
              metrics=['accuracy'])

class myCallback(tf.keras.callbacks.Callback):
  def on_epoch_end(self, epoch, logs={}):
    if(logs.get('val_accuracy')>0.91):
      print("\nAkurasi telah mencapai >91%!")
      self.model.stop_training = True
callbacks = myCallback()

num_epochs = 20
history = model.fit(padded_latih, label_latih, epochs=num_epochs, 
          validation_data=(padded_test, label_test), verbose=1,
          callbacks=[callbacks])